---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppName:
    Type: String
    Description: The name of the application.
    Default: "cloudfront-website"

  Stage:
    Type: String
    Description: The stage where the application is running in, e.g., dev, prod.
    Default: "dev"
  
  Branch:
    Type: String
    Description: The name of the branch being deployed, this enables parallel deployments per environment if required.
    Default: "main"

  PrimarySubDomainName:
    Description: "Name that is used to create the assets DNS entry."
    Type: String
    Default: www

  HostedZoneName:
    Description: "Name that is used to create the DNS entry."
    Type: String
    Default: wolfe.id.au

  HostedZoneId:
    Description: "Hosted zone id that is used to create the DNS entry."
    Type: String
  
  AcmCertificateArn:
    Description: "ARN of the ACM certificate for cloudfront, this must be created in us-east-1."
    Type: String
  
  LoggingBucketDomain:
    Description: "Bucket domain name used for cloudfront logs."
    Type: String

Resources:
  RedirectCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        Aliases:
          - !Sub "${HostedZoneName}"
        DefaultCacheBehavior:
          TargetOriginId: redirectOrigin
          ViewerProtocolPolicy: 'redirect-to-https'
          # "Managed-CachingDisabled" from https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt RedirectFunction.FunctionMetadata.FunctionARN
        Origins:
          - DomainName: !Sub "${PrimarySubDomainName}.${HostedZoneName}"
            Id: redirectOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: sni-only
        Logging:
          Bucket: !Ref LoggingBucketDomain
          Prefix: "Redirect"

  RedirectFunction:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: !Sub |
        function handler(event) {
          var locationURI = 'https://${PrimarySubDomainName}.${HostedZoneName}' + event.request.uri;
          return {
            statusCode: 302,
            statusDescription: 'Found',
            headers: {
              location: { value: locationURI }
            }
          }
        }
      FunctionConfig:
        Comment: !Sub 'Redirect to ${PrimarySubDomainName}.${HostedZoneName}'
        Runtime: cloudfront-js-1.0
      Name: !Sub "${AWS::StackName}-redirectFunction"

  RedirectRecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      AliasTarget:
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt RedirectCloudFrontDistribution.DomainName
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${HostedZoneName}"
      Type: A

  RedirectCloudFrontDistributionParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/config/${Stage}/${Branch}/${AppName}/redirect_cloudfront_distribution"
      Type: String
      Value:
        Ref: RedirectCloudFrontDistribution
